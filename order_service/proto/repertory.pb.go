// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: repertory.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GoodsRepertoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId int64 `protobuf:"varint,1,opt,name=goodsId,proto3" json:"goodsId,omitempty"`
	Num     int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	OrderId int64 `protobuf:"varint,3,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
}

func (x *GoodsRepertoryInfo) Reset() {
	*x = GoodsRepertoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repertory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsRepertoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsRepertoryInfo) ProtoMessage() {}

func (x *GoodsRepertoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_repertory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsRepertoryInfo.ProtoReflect.Descriptor instead.
func (*GoodsRepertoryInfo) Descriptor() ([]byte, []int) {
	return file_repertory_proto_rawDescGZIP(), []int{0}
}

func (x *GoodsRepertoryInfo) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *GoodsRepertoryInfo) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *GoodsRepertoryInfo) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type GoodsListRepertory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GoodsRepertoryInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GoodsListRepertory) Reset() {
	*x = GoodsListRepertory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repertory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsListRepertory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsListRepertory) ProtoMessage() {}

func (x *GoodsListRepertory) ProtoReflect() protoreflect.Message {
	mi := &file_repertory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsListRepertory.ProtoReflect.Descriptor instead.
func (*GoodsListRepertory) Descriptor() ([]byte, []int) {
	return file_repertory_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsListRepertory) GetData() []*GoodsRepertoryInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repertory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_repertory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_repertory_proto_rawDescGZIP(), []int{2}
}

func (x *BaseResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_repertory_proto protoreflect.FileDescriptor

var file_repertory_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x12, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x43, 0x0a, 0x12, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xff, 0x04, 0x0a, 0x09, 0x72, 0x65,
	0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x73, 0x65,
	0x74, 0x12, 0x5f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x67,
	0x65, 0x74, 0x12, 0x6a, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f,
	0x72, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x65, 0x72,
	0x74, 0x6f, 0x72, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x68,
	0x0a, 0x0f, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a,
	0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72,
	0x79, 0x2f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01,
	0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79,
	0x2f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x6c, 0x0a,
	0x11, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x65, 0x72,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x65, 0x72, 0x74, 0x6f,
	0x72, 0x79, 0x2f, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_repertory_proto_rawDescOnce sync.Once
	file_repertory_proto_rawDescData = file_repertory_proto_rawDesc
)

func file_repertory_proto_rawDescGZIP() []byte {
	file_repertory_proto_rawDescOnce.Do(func() {
		file_repertory_proto_rawDescData = protoimpl.X.CompressGZIP(file_repertory_proto_rawDescData)
	})
	return file_repertory_proto_rawDescData
}

var file_repertory_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_repertory_proto_goTypes = []interface{}{
	(*GoodsRepertoryInfo)(nil), // 0: proto.GoodsRepertoryInfo
	(*GoodsListRepertory)(nil), // 1: proto.GoodsListRepertory
	(*BaseResp)(nil),           // 2: proto.BaseResp
}
var file_repertory_proto_depIdxs = []int32{
	0, // 0: proto.GoodsListRepertory.data:type_name -> proto.GoodsRepertoryInfo
	0, // 1: proto.repertory.SetRepertory:input_type -> proto.GoodsRepertoryInfo
	0, // 2: proto.repertory.GetRepertory:input_type -> proto.GoodsRepertoryInfo
	1, // 3: proto.repertory.BatchGetRepertory:input_type -> proto.GoodsListRepertory
	0, // 4: proto.repertory.ReduceRepertory:input_type -> proto.GoodsRepertoryInfo
	1, // 5: proto.repertory.BatchReduceRepertory:input_type -> proto.GoodsListRepertory
	0, // 6: proto.repertory.RollBackRepertory:input_type -> proto.GoodsRepertoryInfo
	2, // 7: proto.repertory.SetRepertory:output_type -> proto.BaseResp
	0, // 8: proto.repertory.GetRepertory:output_type -> proto.GoodsRepertoryInfo
	1, // 9: proto.repertory.BatchGetRepertory:output_type -> proto.GoodsListRepertory
	0, // 10: proto.repertory.ReduceRepertory:output_type -> proto.GoodsRepertoryInfo
	1, // 11: proto.repertory.BatchReduceRepertory:output_type -> proto.GoodsListRepertory
	0, // 12: proto.repertory.RollBackRepertory:output_type -> proto.GoodsRepertoryInfo
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_repertory_proto_init() }
func file_repertory_proto_init() {
	if File_repertory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_repertory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsRepertoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repertory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsListRepertory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repertory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_repertory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_repertory_proto_goTypes,
		DependencyIndexes: file_repertory_proto_depIdxs,
		MessageInfos:      file_repertory_proto_msgTypes,
	}.Build()
	File_repertory_proto = out.File
	file_repertory_proto_rawDesc = nil
	file_repertory_proto_goTypes = nil
	file_repertory_proto_depIdxs = nil
}
